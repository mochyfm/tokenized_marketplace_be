import * as fs from 'fs';
import { BKND_CONSTANTS } from '../constants/constants.backend';
import * as crypto from 'crypto';

/**
 * Ensure JWT_SECRET is present in the .env file, adding it if necessary.
 */
export function ensureJwtSecretInEnv(secretKeySize: number = 32) {
  // Generates the Secret Key for the application usage
  const generateSecretKey = () =>
    crypto.randomBytes(secretKeySize).toString('hex');

  // Check if the .env file exists and if it already contains JWT_SECRET
  if (
    !fs.existsSync(BKND_CONSTANTS.envFilePath) ||
    !fs.readFileSync(BKND_CONSTANTS.envFilePath, 'utf-8').includes('JWT_SECRET')
  ) {
    // Generate a secret key
    const secretKey = generateSecretKey();

    // Check if the comment already exists
    const existingComment =
      '# Encrypted code generated by the application, remove and re-launch if you want a new one\n';

    if (
      !fs
        .readFileSync(BKND_CONSTANTS.envFilePath, 'utf-8')
        .includes(existingComment)
    ) {
      // Append comment to the .env file or create the file if it doesn't exist
      fs.appendFileSync(BKND_CONSTANTS.envFilePath, `\n${existingComment}`);
    }

    // Append JWT_SECRET to the .env file
    fs.appendFileSync(BKND_CONSTANTS.envFilePath, `JWT_SECRET=${secretKey}\n`);
    console.log('Secret key generated and appended to the .env file.');
  }
}

// Call the function to ensure JWT_SECRET is present in the .env file
